# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is also advisable to ignore cache/ directory and not track uncommitted changes.
.idea/

# VS Code
.vscode/
*.code-workspace

# Application specific files
# Data directories
data/
backups/
exports/

# Log files
logs/
*.log

# Authentication tokens and secrets
tokens/
secrets/
.env.local
.env.production

# Temporary files
temp/
tmp/
*.tmp
*.temp

# OS specific files
# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Application cache and runtime files
.cache/
*.pid
*.seed
*.pid.lock

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.parcel-cache

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# Jupyter notebook files
*.ipynb

# Research and development files
research/
experiments/
sandbox/

# Database files
*.db
*.sqlite
*.sqlite3

# Configuration files with sensitive data
config.local.toml
config.production.toml

# Backup files
*.bak
*.backup
*.old
*.orig

# Archive files
*.zip
*.tar.gz
*.7z
*.rar

# IDE files
*.swp
*.swo
*~

# Install tracking
.last_install

# Docker files (if you want to ignore them)
# Dockerfile
# docker-compose.yml

# Kubernetes files (if you want to ignore them)
# *.yaml
# *.yml

# Monitoring and profiling
*.prof
*.pstats

# Testing artifacts
.coverage.*
htmlcov/
.pytest_cache/
test-results/

# Documentation build
docs/build/
docs/dist/

# Package files
*.whl
*.egg
*.tar.gz

# Local development
local/
dev/

# Performance monitoring
*.perf

# Memory dumps
*.dump
*.dmp

# Core dumps
core.*

# Application specific ignores for trade-analyst
# Market data files (too large for git)
market_data/
historical_data/
tick_data/

# Generated reports
reports/
output/

# API response cache
cache/
api_cache/

# Model files (if using ML)
models/
*.pkl
*.joblib
*.model

# Configuration overrides
config.override.toml